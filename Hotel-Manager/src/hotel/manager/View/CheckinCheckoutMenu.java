/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.manager.View;

import Control.BookingController;
import Model.Booking;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 09046138950
 */
public class CheckinCheckoutMenu extends javax.swing.JFrame {

    /**
     * Creates new form CheckinCheckoutMenu
     */
    public CheckinCheckoutMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookingTable = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bookingTextInput = new javax.swing.JTextField();
        buttonCheckin = new javax.swing.JButton();
        buttonCheckout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar checkin e checkout");
        setMaximumSize(new java.awt.Dimension(900, 720));
        setMinimumSize(new java.awt.Dimension(900, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        bookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Código", "Arquivado", "Data do checkin", "Data do checkout"
            }
        ));
        bookingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookingTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Checkin e Checkout de agendamentos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Código do agendamento selecionado:");

        bookingTextInput.setEditable(false);
        bookingTextInput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buttonCheckin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonCheckin.setText("Efetuar checkin");
        buttonCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckinActionPerformed(evt);
            }
        });

        buttonCheckout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonCheckout.setText("Efetuar checkout");
        buttonCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookingTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(buttonCheckin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCheckout)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(bookingTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bookingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingTableMouseClicked
        //Aqui o sistema irá pegar o código da linha que o usuário clicou e passar para o text input
        int row = bookingTable.rowAtPoint(evt.getPoint());
        this.bookingTextInput.setText(String.valueOf(bookingTable.getValueAt(row, 0)));
    }//GEN-LAST:event_bookingTableMouseClicked

    private void buttonCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckoutActionPerformed
        BookingController bookingController = new BookingController();
        if (Integer.parseInt(this.bookingTextInput.getText()) >= 0) {
            Booking booking = bookingController.findBookingByCode(Integer.parseInt(this.bookingTextInput.getText()));
            ModalCheckout modalCheckout = new ModalCheckout(booking);
            modalCheckout.setVisible(true);
        }
    }//GEN-LAST:event_buttonCheckoutActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        reloadTable();
    }//GEN-LAST:event_formWindowActivated

    private void buttonCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckinActionPerformed
        BookingController bookingController = new BookingController();
        if (Integer.parseInt(this.bookingTextInput.getText()) >= 0) {
            Booking booking = bookingController.findBookingByCode(Integer.parseInt(this.bookingTextInput.getText()));
            if (booking.getCheckinDate().equals("null")) {
                booking.setCheckinDate(new Date().toString());
                bookingController.editBooking(booking);
            }
        }
        reloadTable();
    }//GEN-LAST:event_buttonCheckinActionPerformed

    private void reloadTable() {
        //"Código", "Arquivado", "Data do checkin", "Data do checkout"
        BookingController bookingController = new BookingController();
        ArrayList<Booking> bookings = bookingController.getAllBookings();
        DefaultTableModel tabela = (DefaultTableModel) bookingTable.getModel();

        //Limpeza das linhas da tabela
        while (tabela.getRowCount() > 0) {
            tabela.removeRow(0);
        }

        //Repopulando tabela
        for (Booking booking : bookings) {
            tabela.addRow(new Object[]{
                booking.getCode(), booking.isArchived(), booking.getCheckinDate(), booking.getCheckoutDate()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookingTable;
    private javax.swing.JTextField bookingTextInput;
    private javax.swing.JButton buttonCheckin;
    private javax.swing.JButton buttonCheckout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
